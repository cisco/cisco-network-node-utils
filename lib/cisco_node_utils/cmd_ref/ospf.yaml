# ospf
---
_exclude: [ios_xr]

_template:
  get_command: "show running ospf all"
  context:
    - "router ospf <name>"
    - "(?)vrf <vrf>"

auto_cost:
  get_value: '/^auto-cost reference-bandwidth (\d+)\s*(\S+)?$/'
  set_value: "auto-cost reference-bandwidth <cost> <type>"
  default_value: [40, "Gbps"]

bfd:
  kind: boolean
  get_value: '/^bfd$/'
  set_value: '<state> bfd'
  default_value: false

default_metric:
  kind: int
  get_value: '/^default-metric (\d+)?$/'
  set_value: "<state> default-metric <metric>"
  default_value: 0

log_adjacency:
  auto_default: false
  get_value: '/^(log-adjacency-changes)\s*(detail)?$/'
  set_value: "<state> log-adjacency-changes <type>"
  default_value: :none

process_initialized:
  _exclude: [ios_xr, N3k, N7k, N9k-F, N9k]
  # ospf process initialization state
  kind: boolean
  context: ~
  get_command: "show ip ospf stat"
  get_value: '/^No SAP is registered/' # Ospf is not initialized when seen

router:
  multiple: true
  get_command: "show running ospf"
  context: ~
  get_value: '/^router ospf (\S+)$/'
  set_value: "<state> router ospf <name>"

router_id:
  get_value: '/^router-id (\S+)?$/'
  set_value: "<state> router-id <router_id>"
  default_value: ""

timer_throttle_lsa:
  get_value: '/^timers throttle lsa (\d+) (\d+) (\d+)$/'
  set_value: "timers throttle lsa <start> <hold> <max>"

timer_throttle_lsa_hold:
  default_value: 5000

timer_throttle_lsa_max:
  default_value: 5000

timer_throttle_lsa_start:
  default_value: 0

timer_throttle_spf:
  get_value: '/^timers throttle spf (\d+) (\d+) (\d+)$/'
  set_value: "timers throttle spf <start> <hold> <max>"

timer_throttle_spf_hold:
  default_value: 1000

timer_throttle_spf_max:
  default_value: 5000

timer_throttle_spf_start:
  default_value: 200

vrf:
  multiple: true
  context: ["router ospf <name>"]
  get_value: '/^vrf\s+(\S+)$/'
  set_value: "<state> vrf <vrf>"
