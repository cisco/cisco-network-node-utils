# bgp_af.yaml
---
_template:
  context:
    - "router bgp <asnum>"
    - '(?)vrf <vrf>'
    - 'address-family <afi> <safi>'
  nexus:
    get_command: 'show running bgp all'
  ios_xr:
    get_command: 'show running-config router bgp'

additional_paths_install:
  _exclude: [ios_xr, N3k, N9k-F, N9k]
  kind: boolean
  get_value: '/^additional-paths install backup$/'
  set_value: '<state> additional-paths install backup'
  default_value: false

additional_paths_receive:
  kind: boolean
  get_value: '/^additional-paths receive$/'
  set_value: '<state> additional-paths receive'
  default_value: false

additional_paths_selection:
  kind: string
  nexus:
    get_value: '/^additional-paths selection route-map (.*)$/'
    set_value: '<state> additional-paths selection route-map <route_map>'
  ios_xr:
    get_value: '/^additional-paths selection route-policy (.*)$/'
    set_value: '<state> additional-paths selection route-policy <route_policy>'
  default_value: ""

additional_paths_send:
  kind: boolean
  get_value: '/^additional-paths send$/'
  set_value: '<state> additional-paths send'
  default_value: false

advertise_l2vpn_evpn:
  _exclude: [ios_xr, N3k, N6k]
  kind: boolean
  get_value: '/^advertise l2vpn evpn$/'
  set_value: '<state> advertise l2vpn evpn'
  default_value: false

all_afs:
  multiple: true
  context:
    - "router bgp <asnum>"
    - '(?)vrf <vrf>'
  get_value: '/^address-family (\S+) (\S+)$/'

client_to_client:
  kind: boolean
  default_value: true
  nexus:
    get_value: '/^(no )?client-to-client reflection$/'
    set_value: '<state> client-to-client reflection'
  ios_xr:
    get_value: '/^bgp client-to-client reflection disable$/'
    set_value: '<state> bgp client-to-client reflection disable'

dampen_igp_metric:
  _exclude: [ios_xr]
  get_value: '/^(no )?dampen-igp-metric *(\d+)?$/'
  set_value: '<state> dampen-igp-metric <num>'
  default_value: 600

dampening:
  auto_default: false
  default_value: ['15', '750', '2000', '45']
  nexus:
    get_value: '/^dampening(?: (?:(\d+) (\d+) (\d+) (\d+)|route-map (.*)))?$/'
    set_value: '<state> dampening <route_map> <decay> <reuse> <suppress> <suppress_max>'
  ios_xr:
    get_value: '/^bgp dampening(?: (?:(\d+) (\d+) (\d+) (\d+)|route-policy (.*)))?$/'
    set_value: '<state> bgp dampening <route_map> <decay> <reuse> <suppress> <suppress_max>'

dampening_half_time:
  kind: int
  default_value: 15

dampening_max_suppress_time:
  kind: int
  default_value: 45

dampening_reuse_time:
  kind: int
  default_value: 750

dampening_routemap:
  default_value: ""

dampening_routepolicy:
  default_value: ""

dampening_state:
  kind: boolean
  default_value: true

dampening_suppress_time:
  kind: int
  default_value: 2000

default_information_originate:
  _exclude: [ios_xr]
  kind: boolean
  default_value: false
  get_value: '/^default-information originate$/'
  set_value: '<state> default-information originate'

default_metric:
  _exclude: [ios_xr]
  kind: int
  get_value: '/^default-metric (\d+)$/'
  set_value: '<state> default-metric <num>'
  default_value: false

distance:
  default_value: ['20', '200', '220']
  nexus:
    get_value: '/^distance (\d+) (\d+) (\d+)$/'
    set_value: '<state> distance <ebgp> <ibgp> <local>'
  ios_xr:
    get_value: '/^distance bgp (\d+) (\d+) (\d+)$/'
    set_value: '<state> distance bgp <ebgp> <ibgp> <local>'

distance_ebgp:
  kind: int
  default_value: 20

distance_ibgp:
  kind: int
  default_value: 200

distance_local:
  kind: int
  default_value: 220

inject_map:
  _exclude: [ios_xr]
  multiple: true
  get_value: '/^inject-map (\S+) exist-map (\S+) *(copy-attributes)?$/'
  set_value: '<state> inject-map <inject> exist-map <exist> <copy>'
  default_value: []

maximum_paths:
  kind: int
  nexus:
    get_value: '/^maximum-paths (\d+)$/'
    set_value: '<state> maximum-paths <num>'
  ios_xr:
    get_value: '/^maximum-paths ebgp (\d+)$/'
    set_value: '<state> maximum-paths ebgp <num>'
  default_value: 1

maximum_paths_ibgp:
  kind: int
  get_value: '/^maximum-paths ibgp (\d+)$/'
  set_value: '<state> maximum-paths ibgp <num>'
  default_value: 1

networks:
  multiple: true
  nexus:
    get_value: '/^network (\S+) ?(?:route-map )?(\S+)?$/'
    set_value: '<state> network <network> <route_map>'
  ios_xr:
    get_value: '/^network (\S+) ?(?:route-policy )?(\S+)?$/'
    set_value: '<state> network <network> <route_policy>'
  default_value: []

next_hop_route_map:
  kind: string
  default_value: ""
  nexus:
    get_value: '/^nexthop route-map (.*)$/'
    set_value: '<state> nexthop route-map <route_map>'
  ios_xr:
    get_value: '/nexthop route-policy (.*)$/'
    set_value: '<state> nexthop route-policy <route_map>'

redistribute:
  multiple: true
  set_value: '<state> redistribute <protocol>'
  nexus:
    get_value: '/^redistribute (\S+ ?\S+?) ?(?:route-map (\S+))?$/'
  ios_xr:
    get_value: '/^redistribute (\S+ ?\S+?) ?(?:route-policy (\S+))?$/'
  default_value: []

redistribute_policy:
  nexus:
    set_value: '<state> redistribute <protocol> route-map <policy>'
  ios_xr:
    set_value: '<state> redistribute <protocol> route-policy <policy>'

suppress_inactive:
  _exclude: [ios_xr]
  kind: boolean
  default_value: false
  get_value: '/^suppress-inactive$/'
  set_value: '<state> suppress-inactive'

table_map:
  kind: string
  default_value: ""
  nexus:
    get_value: '/^table-map (\S+)(?: filter)?$/'
    set_value: '<state> table-map <map>'
  ios_xr:
    get_value: '/^table-policy (\S+)$/'
    set_value: '<state> table-policy <map>'

table_map_filter:
  _exclude: [ios_xr]
  kind: boolean
  default_value: false
  get_value: '/^table-map \S+ filter$/'
  set_value: '<state> table-map <map> filter'
