# vdc
#
# The current simplified implementation assumes no admin-vdc and that the
# default vdc name uses id 1. Full multi-vdc support is TBD.
---
_exclude: [N3k, N5k, N6k, N9k-F, N9k, ios_xr]

_template:
  get_command: 'show run vdc all'
  get_context: ['/^vdc <vdc>/']
  set_context: ['terminal dont-ask', 'vdc <vdc>']

all_vdcs:
  multiple:
  get_command: 'show run vdc all'
  get_context: ~
  get_value: '/^vdc (\S+) id/'

allocate_interface:
  get_value: '/^allocate interface (.*)/'
  default_value: ~

allocate_interface_unallocated:
  kind: boolean
  set_value: 'allocate interface unallocated-interfaces'

default_vdc_name:
  # Name of the default vdc. Assumes no admin-vdc.
  get_context: ~
  get_value: '/^vdc (\S+) id 1$/' # Assumes id 1 for default vdc

limit_resource_module_type:
  get_value: '/^limit-resource module-type (.*)/'
  set_value: '<state> limit-resource module-type <mods>'
  default_value: ''

membership:
  multiple:
  get_command: 'show vdc membership'
  get_context: ['/^vdc_id: \d+ vdc_name: <vdc> interfaces:$/']
  get_value: '/(Ethernet\d+\/\d+)/'
  set_value: 'allocate interface <intf>'
  default_value: []

vdc_support:
  # This is a only used for determining support for VDCs
  kind: boolean
  N7k:
    default_only: true
  else:
    # this feature is always off on these platforms and cannot be changed
    default_only: false
